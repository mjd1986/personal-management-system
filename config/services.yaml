# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
- { resource: packages/config/encryption.yaml }

parameters:
    locale: 'en'
    security.restricted_ips: '%env(APP_IPS_ACCESS_RESTRICTION)%'
    system.from_email: 'no-reply@personal-management-system.localhost'

    project.name: "Personal Management System"

    upload.tmp.dir: '/tmp/pms-upload'

    # in seconds
    # whenever this has to be changed, don't forget about adjusting frontend logic
    # as the fronted is silently updating the jwt token when user clicks on page to keep the user logged in.
    # The frontend code checks with each click on page if the jwt token has expired and if so - user is logged out
    # With this, the token is refreshed every "X" seconds so that user won't be logged out while just handling front
    # based page which don't have any ajax calls etc.
    jwt_token_lifetime: 3600

# Resolving deprecation for moving from 4.4x to 5.x
sensio_framework_extra:
    router:
        annotations: false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
    app.twig_extension:
        class: Twig_Extensions_Extension_Date
        public: false
        tags:
        - { name: twig.extension }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Services\Core\Logger:
        arguments:
            $securityLogger: "@monolog.logger.security"
        public: true

    services_core_logger:
        alias: App\Services\Core\Logger
        public: true

    App\Services\Core\Translator:
        calls:
            - [setTranslator, ['@translator']]

    App\Services\ConfigLoaders\ConfigLoaderSession:
        public: true
        arguments:
          $systemLockLifetime: '111111' # info -temp only - will be removed due to front separtaion
          $userLoginLifetime: '11111111' # info -temp only - will be removed due to front separtaion

    App\Services\ConfigLoaders\ConfigLoaderSecurity:
        calls:
            - setRestrictedIps: ['%security.restricted_ips%']

    App\Services\ConfigLoaders\ConfigLoaderSystem:
        calls:
            - setSystemFromEmail: ['%system.from_email%']

    notifier_proxy_logger_bridge:
        alias: App\NotifierProxyLoggerBridge

    App\NotifierProxyLoggerBridge:
        public: true
        arguments:
            $logFilePath: '%kernel.logs_dir%/notifier-proxy-logger-bridge.log'
            $loggerName: 'NotifierProxyLogger'
            $baseUrl: 'http://127.0.0.1:8010/'

    App\PmsIo\PmsIoBridge:
        public: true
        arguments:
            $logFilePath: '%kernel.logs_dir%/pms-io-bridge.log'
            $loggerName: 'PmsIoLogger'
            $baseUrl: 'http://127.0.0.1:8001/'
            $login: 'login'
            $password: 'password'
            $secret: 'add-secret-here'

    App\Services\External\NotifierProxyLoggerService:
        arguments:
            $notifierProxyLoggerBridge: '@notifier_proxy_logger_bridge'

    App\Controller\Page\SettingsLockModuleController:
        calls:
            - initializeSettingsModuleLockDtos: []

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
